# ELFIN Data Analysis

This document analyzes ELFIN satellite data to find continuous time ranges and prepare for conjunction analysis with DMSP.

## Loading ELFIN Flux Data

```{julia}
using PySPEDAS.Projects
using PySPEDAS
using Speasy
using Dates
using DimensionalData

probe = "b"
tr = ["2020-01-01", "2020-03-01"]

# Load ELFIN EPD data
epd_ds = elfin.epd(tr; probe, level="l2")
elb_flux = DimArray(epd_ds.elb_pef_hs_nflux_para)
```

## Finding Continuous Time Ranges

```{julia}
using SPEDAS
using SPEDAS: times, find_continuous_timeranges

continuous_ranges = find_continuous_timeranges(elb_flux, Second(60))

# Print the continuous time ranges
println("Found $(length(continuous_ranges)) continuous time ranges:")
for (i, (start_time, end_time)) in enumerate(continuous_ranges)
    duration = end_time - start_time
    println("Range $i: $start_time to $end_time ($(round(duration, Minute)))")
end
```

Download data from Madrigal for each continuous time range

```{julia}
using MadrigalWeb
MadrigalWeb.set_default_server("https://cedar.openmadrigal.org")
MadrigalWeb.set_default_user("Zijin+ZHang", "zijin@ucla.edu")

# timeranges_day = sort(collect(Set((floor(t0, Day), ceil(t1, Day)) for (t0, t1) in continuous_ranges)))

function dmsp_download(timerange, inst=8100, kindat=10216)
    MadrigalWeb.download_data(inst, kindat, timerange...)
end
dmsp_download.(continuous_ranges)
```


## Loading ELFIN Position Data

```{julia}
elb_pos_gei = DimArray.(Speasy.get_data("cda/ELB_L1_STATE_DEFN/elb_pos_gei", continuous_ranges))
```